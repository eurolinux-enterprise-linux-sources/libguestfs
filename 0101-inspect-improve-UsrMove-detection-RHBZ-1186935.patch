From 1d70660666f94c325a3ced43c15df82c539ff143 Mon Sep 17 00:00:00 2001
From: Pino Toscano <ptoscano@redhat.com>
Date: Wed, 26 Oct 2016 09:22:09 -0400
Subject: [PATCH 101/118] inspect: improve UsrMove detection (RHBZ#1186935)

In case /usr is a symlink to /usr/bin, then we cannot rely on /usr/bin
to exist, since /usr might be in a different partition.  Thus, in case
/bin is a symlink, check it points to "usr/bin".

(cherry picked from commit 1df34fd8d131dc577344550350077431f56e8bdc)
---
 src/inspect-fs.c | 20 ++++++++++++++++++--
 1 file changed, 18 insertions(+), 2 deletions(-)

diff --git a/src/inspect-fs.c b/src/inspect-fs.c
index fd6c783..276e7ef 100644
--- a/src/inspect-fs.c
+++ b/src/inspect-fs.c
@@ -81,6 +81,7 @@ free_regexps (void)
 
 static int check_filesystem (guestfs_h *g, const char *device, int is_block, int is_partnum);
 static int extend_fses (guestfs_h *g);
+static int is_symlink_to (guestfs_h *g, const char *file, const char *wanted_target);
 
 /* Find out if 'device' contains a filesystem.  If it does, add
  * another entry in g->fses.
@@ -233,8 +234,7 @@ check_filesystem (guestfs_h *g, const char *device,
   /* Linux root? */
   else if (is_dir_etc &&
            (is_dir_bin ||
-            (guestfs_is_symlink (g, "/bin") > 0 &&
-             guestfs_is_dir (g, "/usr/bin") > 0)) &&
+            is_symlink_to (g, "/bin", "usr/bin") > 0) &&
            guestfs_is_file (g, "/etc/fstab") > 0) {
     fs->is_root = 1;
     fs->format = OS_FORMAT_INSTALLED;
@@ -340,6 +340,22 @@ extend_fses (guestfs_h *g)
   return 0;
 }
 
+static int
+is_symlink_to (guestfs_h *g, const char *file, const char *wanted_target)
+{
+  CLEANUP_FREE char *target = NULL;
+
+  if (guestfs_is_symlink (g, file) == 0)
+    return 0;
+
+  target = guestfs_readlink (g, file);
+  /* This should not fail, but play safe. */
+  if (target == NULL)
+    return 0;
+
+  return STREQ (target, wanted_target);
+}
+
 int
 guestfs___is_file_nocase (guestfs_h *g, const char *path)
 {
-- 
2.7.4

