From fc8b1e24c6816735fd7e9c345cb12ca9f51063f7 Mon Sep 17 00:00:00 2001
From: Pino Toscano <ptoscano@redhat.com>
Date: Wed, 21 May 2014 15:01:50 +0200
Subject: [PATCH 063/118] daemon: add sysroot_realpath

Similar to sysroot_path, but first resolves (using realpath) the given
path within sysroot.

(cherry picked from commit d7aec9c0d31c14b97c0bb93595d492fdd3741143)
---
 daemon/daemon.h   |  1 +
 daemon/guestfsd.c | 21 +++++++++++++++++++++
 2 files changed, 22 insertions(+)

diff --git a/daemon/daemon.h b/daemon/daemon.h
index e6208b1..022591f 100644
--- a/daemon/daemon.h
+++ b/daemon/daemon.h
@@ -41,6 +41,7 @@ extern const char *sysroot;
 extern size_t sysroot_len;
 
 extern char *sysroot_path (const char *path);
+extern char *sysroot_realpath (const char *path);
 
 extern int is_root_device (const char *device);
 
diff --git a/daemon/guestfsd.c b/daemon/guestfsd.c
index e78dd4d..69c3f53 100644
--- a/daemon/guestfsd.c
+++ b/daemon/guestfsd.c
@@ -392,6 +392,27 @@ sysroot_path (const char *path)
   return r;
 }
 
+/* Resolve path within sysroot, calling sysroot_path on the resolved path.
+ *
+ * Caller must check for NULL and call reply_with_perror ("malloc/realpath")
+ * if it is.  Caller must also free the string.
+ *
+ * See also the custom %R printf formatter which does shell quoting too.
+ */
+char *
+sysroot_realpath (const char *path)
+{
+  CLEANUP_FREE char *rp = NULL;
+
+  CHROOT_IN;
+  rp = realpath (path, NULL);
+  CHROOT_OUT;
+  if (rp == NULL)
+    return NULL;
+
+  return sysroot_path (rp);
+}
+
 int
 xwrite (int sock, const void *v_buf, size_t len)
 {
-- 
2.7.4

