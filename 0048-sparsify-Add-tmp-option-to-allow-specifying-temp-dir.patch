From afbf06d20a26d6d4a613918869d59568594a0082 Mon Sep 17 00:00:00 2001
From: "Richard W.M. Jones" <rjones@redhat.com>
Date: Fri, 11 Jul 2014 13:26:33 +0100
Subject: [PATCH 048/102] sparsify: Add --tmp option to allow specifying temp
 directory or block device.

Add the virt-sparsify --tmp option.

This works in two ways.  Either you can specify a temporary directory,
in which case it's just the same as setting $TMPDIR before:

  virt-sparsify indisk outdisk --tmp /var/tmp

Or, as a new feature, you can specify a block device which is directly
used (and OVERWRITTEN):

  virt-sparsify indisk outdisk --tmp /dev/sdX

This is useful for oVirt nodes, where there is limited temporary
space, but a block device can be assigned to the node.

In both cases it is only used in copying mode.  In-place
sparsification doesn't require large amounts of temporary space.

(cherry picked from commit 870c17e99acd038daed9b4004c66d401679475ab)
---
 sparsify/sparsify.ml       | 115 ++++++++++++++++++++++++++++-----------------
 sparsify/virt-sparsify.pod |  23 ++++++++-
 2 files changed, 92 insertions(+), 46 deletions(-)

diff --git a/sparsify/sparsify.ml b/sparsify/sparsify.ml
index 758378f..50f51cf 100644
--- a/sparsify/sparsify.ml
+++ b/sparsify/sparsify.ml
@@ -37,7 +37,7 @@ let error fs = error ~prog fs
 
 let indisk, outdisk, check_tmpdir, compress, convert, debug_gc,
   format, ignores, machine_readable,
-  option, quiet, verbose, trace, zeroes =
+  option, quiet, tmp_param, verbose, trace, zeroes =
   let display_version () =
     let g = new G.guestfs () in
     let version = g#version () in
@@ -67,6 +67,7 @@ let indisk, outdisk, check_tmpdir, compress, convert, debug_gc,
   let machine_readable = ref false in
   let option = ref "" in
   let quiet = ref false in
+  let tmp = ref "" in
   let verbose = ref false in
   let trace = ref false in
   let zeroes = ref [] in
@@ -82,6 +83,7 @@ let indisk, outdisk, check_tmpdir, compress, convert, debug_gc,
     "-o",        Arg.Set_string option,     s_"option" ^ " " ^ s_"Add qemu-img options";
     "-q",        Arg.Set quiet,             " " ^ s_"Quiet output";
     "--quiet",   Arg.Set quiet,             " -\"-";
+    "--tmp",     Arg.Set_string tmp,        s_"block|dir" ^ " " ^ s_"Set temporary block device or directory";
     "-v",        Arg.Set verbose,           " " ^ s_"Enable debugging messages";
     "--verbose", Arg.Set verbose,           " -\"-";
     "-V",        Arg.Unit display_version,  " " ^ s_"Display version and exit";
@@ -113,6 +115,7 @@ read the man page virt-sparsify(1).
   let machine_readable = !machine_readable in
   let option = match !option with "" -> None | str -> Some str in
   let quiet = !quiet in
+  let tmp = match !tmp with "" -> None | str -> Some str in
   let verbose = !verbose in
   let trace = !trace in
   let zeroes = List.rev !zeroes in
@@ -125,6 +128,7 @@ read the man page virt-sparsify(1).
     printf "linux-swap\n";
     printf "zero\n";
     printf "check-tmpdir\n";
+    printf "tmp-option\n";
     let g = new G.guestfs () in
     g#add_drive "/dev/null";
     g#launch ();
@@ -178,7 +182,7 @@ read the man page virt-sparsify(1).
 
   indisk, outdisk, check_tmpdir, compress, convert,
     debug_gc, format, ignores, machine_readable,
-    option, quiet, verbose, trace, zeroes
+    option, quiet, tmp, verbose, trace, zeroes
 
 (* Try to determine the version of the 'qemu-img' program.
  * All known versions of qemu-img display the following first
@@ -238,22 +242,33 @@ let () =
   if output_format = "raw" && compress then
     error (f_"--compress cannot be used for raw output.  Remove this option or use --convert qcow2.")
 
-(* Get virtual size of the input disk. *)
-let virtual_size = (new G.guestfs ())#disk_virtual_size indisk
-let () =
-  if not quiet then
-    printf (f_"Input disk virtual size = %Ld bytes (%s)\n%!")
-      virtual_size (human_size virtual_size)
+type tmp_place = Directory of string | Block_device of string
 
-(* Check there is enough space in $TMPDIR. *)
-let tmpdir = Filename.temp_dir_name
+(* Use TMPDIR or --tmp parameter? *)
+let tmp_place =
+  match tmp_param with
+  | None -> Directory Filename.temp_dir_name (* $TMPDIR or /tmp *)
+  | Some dir when is_directory dir -> Directory dir
+  | Some dev when is_block_device dev -> Block_device dev
+  | Some path ->
+    error (f_"--tmp parameter must point to a directory or a block device")
 
+(* Check there is enough space in temporary directory. *)
 let () =
-  let print_warning () =
-    let free_space = statvfs_free_space tmpdir in
-    let extra_needed = virtual_size -^ free_space in
-    if extra_needed > 0L then (
-      eprintf (f_"\
+  match tmp_place with
+  | Block_device _ -> ()
+  | Directory tmpdir ->
+    (* Get virtual size of the input disk. *)
+    let virtual_size = (new G.guestfs ())#disk_virtual_size indisk in
+    if not quiet then
+      printf (f_"Input disk virtual size = %Ld bytes (%s)\n%!")
+        virtual_size (human_size virtual_size);
+
+    let print_warning () =
+      let free_space = statvfs_free_space tmpdir in
+      let extra_needed = virtual_size -^ free_space in
+      if extra_needed > 0L then (
+        eprintf (f_"\
 
 WARNING: There may not be enough free space on %s.
 You may need to set TMPDIR to point to a directory with more free space.
@@ -267,40 +282,52 @@ You can ignore this warning or change it to a hard failure using the
 --check-tmpdir=(ignore|continue|warn|fail) option.  See virt-sparsify(1).
 
 %!")
-        tmpdir (human_size virtual_size)
-        (human_size free_space) (human_size extra_needed);
-      true
-    ) else false
-  in
-
-  match check_tmpdir with
-  | `Ignore -> ()
-  | `Continue -> ignore (print_warning ())
-  | `Warn ->
-    if print_warning () then (
-      eprintf "Press RETURN to continue or ^C to quit.\n%!";
-      ignore (read_line ())
-    );
-  | `Fail ->
-    if print_warning () then (
-      eprintf "Exiting because --check-tmpdir=fail was set.\n%!";
-      exit 2
-    )
-
-let () =
-  if not quiet then
-    printf (f_"Create overlay file in %s to protect source disk ...\n%!") tmpdir
+          tmpdir (human_size virtual_size)
+          (human_size free_space) (human_size extra_needed);
+        true
+      ) else false
+    in
+
+    match check_tmpdir with
+    | `Ignore -> ()
+    | `Continue -> ignore (print_warning ())
+    | `Warn ->
+     if print_warning () then (
+        eprintf "Press RETURN to continue or ^C to quit.\n%!";
+        ignore (read_line ())
+      );
+    | `Fail ->
+      if print_warning () then (
+        eprintf "Exiting because --check-tmpdir=fail was set.\n%!";
+        exit 2
+      )
 
 (* Create the temporary overlay file. *)
 let overlaydisk =
-  let tmp = Filename.temp_file "sparsify" ".qcow2" in
-  let unlink_tmp () = try unlink tmp with _ -> () in
+  if not quiet then (
+    match tmp_place with
+    | Directory tmpdir ->
+      printf (f_"Create overlay file in %s to protect source disk ...\n%!")
+        tmpdir
+    | Block_device device ->
+      printf (f_"Create overlay device %s to protect source disk ...\n%!")
+        device
+  );
+
+  let tmp =
+    match tmp_place with
+    | Directory temp_dir ->
+      let tmp = Filename.temp_file ~temp_dir "sparsify" ".qcow2" in
+      let unlink_tmp () = try unlink tmp with _ -> () in
+
+      (* Unlink on exit. *)
+      at_exit unlink_tmp;
 
-  (* Unlink on exit. *)
-  at_exit unlink_tmp;
+      (* Unlink on sigint. *)
+      Sys.set_signal Sys.sigint (Sys.Signal_handle (fun _ -> unlink_tmp ()));
+      tmp
 
-  (* Unlink on sigint. *)
-  Sys.set_signal Sys.sigint (Sys.Signal_handle (fun _ -> unlink_tmp ()));
+   | Block_device device -> device in
 
   (* Create it with the indisk as the backing file. *)
   let cmd =
diff --git a/sparsify/virt-sparsify.pod b/sparsify/virt-sparsify.pod
index 84e94c5..0514d80 100644
--- a/sparsify/virt-sparsify.pod
+++ b/sparsify/virt-sparsify.pod
@@ -121,8 +121,8 @@ Display help.
 
 =item B<--check-tmpdir=fail>
 
-Check if L</TMPDIR> has enough space to complete the operation.  This
-is just an estimate.
+Check if L</TMPDIR> or I<--tmp> directory has enough space to complete
+the operation.  This is just an estimate.
 
 If the check indicates a problem, then you can either:
 
@@ -223,6 +223,22 @@ them with commas, eg:
 
 This disables progress bars and other unnecessary output.
 
+=item B<--tmp> block_device
+
+=item B<--tmp> dir
+
+In copying mode only, use the named device or directory as the
+location of the temporary overlay (see also L</TMPDIR> below).
+
+If the parameter given is a block device, then the block device is
+written to directly.
+B<Note this erases the existing contents of the block device>.
+
+If the parameter is a directory, then this is the same as setting the
+L</TMPDIR> environment variable.
+
+You cannot use this option and I<--in-place> together.
+
 =item B<-v>
 
 =item B<--verbose>
@@ -318,6 +334,9 @@ error.
 Location of the temporary directory used for the potentially large
 temporary overlay file.
 
+In virt-sparsify E<ge> 1.28, you can override this environment
+variable using the I<--tmp> option.
+
 You should ensure there is enough free space in the worst case for a
 full copy of the source disk (I<virtual> size), or else set C<$TMPDIR>
 to point to another directory that has enough space.
-- 
1.9.3

